name: AUL Quote App CI
true:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
  workflow_dispatch: null
jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: 'python -m pip install --upgrade pip

        pip install -r requirements.txt

        pip install mypy pytest pytest-cov pytest-asyncio black isort pylint

        '
    - continue-on-error: true
      name: Run black
      run: black . --check
    - continue-on-error: true
      name: Run isort
      run: isort . --check-only --profile black
    - continue-on-error: true
      name: Run mypy
      run: mypy warehouse_quote_app
    - continue-on-error: true
      name: Run pylint
      run: pylint warehouse_quote_app --disable=C0111,C0103
    - continue-on-error: true
      env:
        TESTING: 1
      name: Run all tests with coverage
      run: '# Run all tests including end-to-end tests

        pytest tests/ --cov=warehouse_quote_app --cov-report=xml --cov-report=term
        -v

        '
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
        file: ./coverage.xml
    strategy:
      matrix:
        python-version:
        - 3.9
  comprehensive-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        env:
          POSTGRES_DB: test_warehouse_quotes
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        image: postgres:15
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
      redis:
        image: redis:7
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout
          5s --health-retries 5
        ports:
        - 6379:6379
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        cache: pip
        python-version: '3.9'
    - name: Install dependencies
      run: 'python -m pip install --upgrade pip

        pip install -r requirements.txt

        pip install pytest pytest-asyncio pytest-cov

        '
    - continue-on-error: true
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_warehouse_quotes
        REDIS_URL: redis://localhost:6379/0
        TESTING: 1
      name: Run all tests
      run: '# Run all tests including end-to-end tests

        pytest tests/ --cov=warehouse_quote_app --cov-report=xml --cov-report=term
        -v

        '
    - if: always()
      name: Generate test report
      run: 'echo "## Test Summary" > test-report.md

        echo "Tests completed at $(date)" >> test-report.md

        echo "" >> test-report.md

        echo "Full logs available in the GitHub Actions output." >> test-report.md

        '
    - if: always()
      name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test-report.md
        retention-days: 30
'on':
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
